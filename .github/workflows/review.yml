name: Review

on:
  workflow_call:
    # Release calls this Workflow
  pull_request:
    branches:
      - main
      - beta
      - alpha
  merge_group:
    types:
      - checks_requested

jobs:
  lint-tsc:
    name: Lint TSC
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint with TSC
        run: yarn lint:tsc

      - name: Lint Plugin with TSC
        run: yarn plugin:lint:tsc

  lint-eslint:
    name: Lint ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint with ESLint
        run: yarn lint:eslint

      - name: Lint Plugin with ESLint
        run: yarn plugin:lint:eslint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Test with Jest
        run: yarn test

      - name: Test Plugin with Jest
        run: yarn plugin:test

  codegen:
    name: Codegen
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Codegen
        run: yarn codegen

  build-library:
    name: Build Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Library
        run: yarn prepack

  build-android:
    name: Build Android
    needs: [lint-eslint, lint-tsc, test, codegen, build-library]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/react-native-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup Azul Zulu OpenJDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Cache Android Build
        uses: actions/cache@v4
        id: android-build-cache
        with:
          path: |
            ./packages/react-native-app/android/.gradle
            ./packages/react-native-app/android/app/build
            ./packages/react-native-app/android/build
          key: ${{ runner.os }}-android-build--${{ github.workflow }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-android-build--${{ github.workflow }}-${{ github.sha }}
            ${{ runner.os }}-android-build--${{ github.workflow }}-

      - name: Build Android
        if: steps.android-build-cache.outputs.cache-hit != 'true'
        run: yarn react-native build-android --mode release --tasks assembleRelease

      - name: Upload Android App
        uses: actions/upload-artifact@v4
        with:
          name: android-app
          path: ./packages/react-native-app/android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS
    needs: [lint-eslint, lint-tsc, test, codegen, build-library]
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./packages/react-native-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache Cocoapods
        uses: actions/cache@v4
        id: cocoapods-cache
        with:
          path: ./packages/react-native-app/ios/Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('./packages/react-native-app/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-cocoapods-${{ hashFiles('./packages/react-native-app/ios/Podfile.lock') }}
            ${{ runner.os }}-cocoapods-

      - name: Install Cocoapods
        if: steps.cocoapods-cache.outputs.cache-hit != 'true'
        run: yarn pod:install

      - name: Cache iOS Build
        uses: actions/cache@v4
        id: ios-build-cache
        with:
          path: ./packages/react-native-app/ios/build
          key: ${{ runner.os }}-ios-build--${{ github.workflow }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ios-build--${{ github.workflow }}-${{ github.sha }}
            ${{ runner.os }}-ios-build--${{ github.workflow }}-

      - name: Build iOS
        if: steps.ios-build-cache.outputs.cache-hit != 'true'
        # Like `react-native build-ios --mode Release` but adapted for simulators
        run: xcodebuild -workspace ios/MapLibreReactNativeExample.xcworkspace -scheme MapLibreReactNativeExample -configuration Release -sdk iphonesimulator -derivedDataPath ios/build

      - name: Upload iOS App
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          # `.app` is a directory, so we have to archive one level above
          path: |
            ./packages/react-native-app/ios/build/Build/Products/Release-iphonesimulator
            !./packages/react-native-app/ios/build/Build/Products/Release-iphonesimulator/**
            ./packages/react-native-app/ios/build/Build/Products/Release-iphonesimulator/MapLibreReactNativeExample.app

  test-android:
    name: Test Android
    needs: [build-android]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/react-native-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> "$GITHUB_PATH"

      - name: Download Android App
        uses: actions/download-artifact@v4
        with:
          name: android-app
          path: ./packages/react-native-app/android/app-release.apk

      - name: Install Maestro
        run: |
          ls -la
          cd android
          ls -la

      - name: Test Android
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          working-directory: ./packages/react-native-app
          script: |
            adb install ./android/app-release.apk
            maestro test ./e2e/show-map.yml

  test-ios:
    name: Test iOS
    needs: [build-ios]
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./packages/react-native-app
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Maestro
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> "$GITHUB_PATH"

      - name: Download iOS App
        uses: actions/download-artifact@v4
        with:
          name: ios-app
          path: ./packages/react-native-app/ios

      - name: Test iOS
        run: |
          xcrun simctl boot "iPhone 15 Pro"
          xcrun simctl install booted ./ios/MapLibreReactNativeExample.app
          maestro test ./e2e/show-map.yml
